service: pinkman
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  timeout: 10
  region: ${param:region}
  memorySize: ${param:memorySize}
  apiGateway:
    apiKeys:
      - pinkman-${param:stageName}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt EnvironmentTable.Arn
  environment:
    STAGE_NAME: ${param:stageName}
    ENVIRONMENT_TABLE: !Ref EnvironmentTable

# Stage parameters
params:
  # Values for the "prod" stage
  production:
    region: "us-east-1"
    memorySize: "128"
    stageName: "production"
  # Values for the "dev" stage
  development:
    region: "us-east-2"
    memorySize: "128" 
    stageName: "development"

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!*.yml'
    - '!*'

functions:
  getEnvironmentList:
    handler: functions/api/getEnvironmentList.handler
    package:
      patterns:
        - '**/getEnvironmentList.js'
    events:
      - http:
          path: environment-list
          method: get
          private: true

  getEnvironment:
    handler: functions/api/getEnvironment.handler
    package:
      patterns:
        - '**/getEnvironment.js'
    events:
      - http:
          path: '/environment/{id}'
          method: get
          private: true

  createEnvironment:
    handler: functions/api/createEnvironment.handler
    package:
      patterns:
        - '**/createEnvironment.js'
    events:
      - http:
          path: environment
          method: post
          private: true

  updateEnvironment:
    handler: functions/api/updateEnvironment.handler
    package:
      patterns:
        - '**/updateEnvironment.js'
    events:
      - http:
          path: '/environment/{id}'
          method: put
          private: true

  deleteEnvironment:
    handler: functions/api/deleteEnvironment.handler
    package:
      patterns:
        - '**/deleteEnvironment.js'
    events:
      - http:
          path: '/environment/{id}'
          method: delete
          private: true

resources:
  Resources:
    EnvironmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AutoVerifiedAttributes:
          - email
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: true
        VerificationMessageTemplate:
          DefaultEmailOption: CONFIRM_WITH_LINK
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireUppercase: true
            RequireSymbols: false
        UsernameConfiguration:
          CaseSensitive: false
        UsernameAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Name: name
            Required: false
            Mutable: true
          - AttributeDataType: String
            Name: email
            Required: false
            Mutable: true

    WebClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref CognitoUserPool
        ClientName: app-client
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: LEGACY
        SupportedIdentityProviders:
          - COGNITO       